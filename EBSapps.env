#!/bin/sh
#
# *===========================================================================+
# |
# | Copyright (c) 2001, 2009, 2011 Oracle and/or its affiliates.
# |                         All rights reserved.
# |
# +===========================================================================+
# |
# | FILENAME
# |  EBSapps_ux.env
# |
# | DESCRIPTION
# |  This env file displays the following information:
# |   - Location of RUN File System
# |   - Location of PATCH File System
# |   - Location of Non-Editioned File System
# |   - DB Hostname and SID
# |
# |  It gives provision to source the RUN or PATCH file system.
# |
# |  On Shared APPL_TOP, this script sources the RUN or PATCH env file, based on
# |  the hostname of the Application tier node from which this script is run.
# |
# |
# | USAGE

# | PLATFORM
# |  Unix Generic
# |
# | NOTES
# |
# | HISTORY
# |
# +===========================================================================+
# $Header: EBSapps_ux.env 120.0.12020000.12 2015/05/13 10:17:04 sbandla noship $

node_info_file='/u01/install/APPS/fs1/FMW_Home/Oracle_EBS-app1/applications/oacore/APP-INF/node_info.txt'
CHOICE="xxx"

if [ ! -f $node_info_file ]
then
   other_node_info_file='/u01/install/APPS/fs2/FMW_Home/Oracle_EBS-app1/applications/oacore/APP-INF/node_info.txt'
   
   if [ ! -f $other_node_info_file ]
   then
        printf "\nNode info file $node_info_file is not found."
        printf "\nEBSapps.env: exiting with status 1 (Fail)\n\n"
        return 1;
   else
        node_info_file=$other_node_info_file
   fi
fi

host_name=`hostname|sed 's/\..*//g'`

CTXFILE=`grep -i $host_name:CONTEXTFILE $node_info_file | sed 's/^.*[^=]=//g; s/ *$//g'`

if [ "xx${CTXFILE}" = "xx" ] || [ ! -f $CTXFILE ]
then
   printf "\nContext file \"$CTXFILE\" is not valid"
   printf "\nEBSapps.env: exiting with status 1 (Fail)\n\n"
   return 1;
fi

if [ $# -gt 1 ]
then
    printf "  Too many arguments specified."
    printf "\n  Allowed arguments are \"run\" or \"patch\"\n"
    return 1
fi

if [ $# -eq 1 ]
then
	INPUT_CHOICE=`echo $1|tr '[A-Z]' '[a-z]'`
	
	if [ "xx${INPUT_CHOICE}" != "xx" ]
	then
		if [ "${INPUT_CHOICE}" = "run" -o  "${INPUT_CHOICE}" = "patch" ]
		then
			CHOICE=`echo ${INPUT_CHOICE}|cut -c1`
			shift
		else
			printf "  Invalid argument \"$1\""
			printf "\n  Valid arguments are \"run\" or \"patch\"\n"
			shift
			return 1
		fi
	fi
fi

edition_type=`grep "\"s_file_edition_type\"" $CTXFILE | sed 's/^.*s_file_edition_type[^>.]*>[ ]*\([^<]*\)<.*/\1/g; s/ *$//g'`
currentFS=`grep "\"s_current_base\"" $CTXFILE | sed 's/^.*s_current_base[^>.]*>[ ]*\([^<]*\)<.*/\1/g; s/ *$//g'`
otherFS=`grep "\"s_other_base\"" $CTXFILE | sed 's/^.*s_other_base[^>.]*>[ ]*\([^<]*\)<.*/\1/g; s/ *$//g'`
neFS=`grep "\"s_ne_base\"" $CTXFILE | sed 's/^.*s_ne_base[^>.]*>[ ]*\([^<]*\)<.*/\1/g; s/ *$//g'`
context_name=`grep "\"s_contextname\"" $CTXFILE | sed 's/^.*s_contextname[^>.]*>[ ]*\([^<]*\)<.*/\1/g; s/ *$//g'`

if [ "$edition_type" = "patch" ]
then
    run_base=$otherFS
    patch_base=$currentFS
else
    run_base=$currentFS
    patch_base=$otherFS
fi

NON_EDITIONED_BASE=$neFS

#### Check whether the EBS instance has SINGLE/DUAL file system ####
if [ ! -d $otherFS ]
then
    if [ "$CHOICE" = "xxx" ]
    then
        CHOICE="r"
    fi
    fsType="SINGLE"
    runApplTop="$run_base/EBSapps/appl"
    patchApplTop="NOT APPLICABLE"
else
    fsType="DUAL"
    runApplTop="$run_base/EBSapps/appl"
    patchApplTop="$patch_base/EBSapps/appl"
fi

#### Display the E-Business Suite related information #####

printf "\n  E-Business Suite Environment Information\n"
printf "  ----------------------------------------\n"
if [ "$fsType" = "SINGLE" ]
then
    printf "  File System Type          : $fsType\n"
fi
printf "  RUN File System           : $runApplTop\n"
printf "  PATCH File System         : $patchApplTop\n"
printf "  Non-Editioned File System : $NON_EDITIONED_BASE\n\n"

DB_HOST=`grep "\"s_dbhost\"" $CTXFILE | sed 's/^.*s_dbhost[^>.]*>[ ]*\([^<]*\)<.*/\1/g; s/ *$//g'`
DB_DOMAIN=`grep "\"s_dbdomain\"" $CTXFILE | sed 's/^.*s_dbdomain[^>.]*>[ ]*\([^<]*\)<.*/\1/g; s/ *$//g'`
DB_QUALIFIED_DOMAIN_NAME="$DB_HOST.$DB_DOMAIN"
SID=`grep "\"s_dbSid\"" $CTXFILE | sed 's/^.*s_dbSid[^>.]*>[ ]*\([^<]*\)<.*/\1/g; s/ *$//g'`

printf "\n"
printf "  DB Host: $DB_QUALIFIED_DOMAIN_NAME  Service/SID: $SID\n"
printf "\n"

#### Prompt to select and set the RUN or PATCH environment #####

if [ "$CHOICE" = "xxx" ]
then
	printf "\n  E-Business Suite Environment Setting\n"
	printf "  ------------------------------------\n"
	printf "  - Enter [R/r] for sourcing Run File System Environment file, or\n"
        if [ "$fsType" = "DUAL" ]
        then
                printf "  - Enter [P/p] for sourcing Patch File System Environment file, or \n"
        fi
	printf "  - Enter anything else to exit\n"
	printf "\n  Please choose the environment file you wish to source [R/P]:"
	read CHOICE
	CHOICE=`echo $CHOICE|tr '[A-Z]' '[a-z]'`
fi

CONTEXT_ENV_FILE_NAME="APPS"$context_name".env"

if [ "$CHOICE" = "r" ]
then
	if [ ! -f $run_base/EBSapps/appl/$CONTEXT_ENV_FILE_NAME ]
	then
		printf "\nEnvironment file $run_base/EBSapps/appl/$CONTEXT_ENV_FILE_NAME is not found."
		printf "\nEBSapps.env: exiting with status 1 (Fail)\n\n"
		return 1;
	else
		printf "\n  Sourcing the RUN File System ...\n\n"
		. $run_base/EBSapps/appl/$CONTEXT_ENV_FILE_NAME
	fi
elif [ "$CHOICE" = "p" ]
then
        if [ "$fsType" = "DUAL" ]
        then
                if [ ! -f $patch_base/EBSapps/appl/$CONTEXT_ENV_FILE_NAME ]
                then
                        printf "\nEnvironment file $patch_base/EBSapps/appl/$CONTEXT_ENV_FILE_NAME is not found."
                        printf "\nEBSapps.env: exiting with status 1 (Fail)\n\n"
                        return 1;
                else
                        printf "\n  Sourcing the PATCH File System ...\n\n"
                        . $patch_base/EBSapps/appl/$CONTEXT_ENV_FILE_NAME
                fi
        else
                printf "ERROR: Cannot source PATCH file system environment\n"
                return 1;
        fi
fi

#### Reset the edition_type variable so that it is not set as an env variable ####
edition_type=""
CTXFILE=""
CHOICE=""
NON_EDITIONED_BASE=""
neFS=""
currentFS=""
otherFS=""
context_name=""
INPUT_CHOICE=""
node_info_file=""
other_node_info_file=""
CONTEXT_ENV_FILE_NAME=""
host_name=""
DB_HOST=""
DB_DOMAIN=""
DB_QUALIFIED_DOMAIN_NAME=""
SID=""
run_base=""
patch_base=""

